import random
# 乱数は時計の秒針(の十の位と一の位を逆にしたもの)で作れそう？

# ハイ: ±3%, ロー: ±1%, suited: +3%, pocket: ±3％
# ハイ*3+ロー+9%+suited(3%)
# ポケット*3 + 45%
# 50%:      K-2, Q-5, J-8, 2-2
# 60%: A-8, K-J,           5-5

# プリフロップ：
# if 10BB以上ある&&40%を超えている -> (強くても)10%の確率でリンプから入る
#    -> VPIP += 7% になりそう
# else: 嘘の二枚目を(勝率に応じて)引く
# -> 6割超えてるならレイズ(3から入って6までは必ず追いかける)
#    -> K-K, A-A: 初手オールインでも乗る(ブラフ時は相手が降りてくれないので乗らない)
#    -> ~ min(x9, 自x0.5) : 気分でてきとうに
#    -> min(x9, 自x0.5) ~: 真に AKo, AJs, 77 以上なら勝負に乗る, 嘘ならオリ
# -> 5割超えてるならコール(max: 0.5) / レート上がったら即オリ(レンジが広いのが良い)

# フロップ以降：
# - 真の手が強い -> 通常戦略:
#   - 今強い: レートを上げる(今までのベット額は忘れて)
#      - x0.5(相手は25%勝てればいい) 固定(？)
#      - ストーリーを保ちつつブラフが効くので、平時からドンクべットでいい
#   - 今普通: チェックで回す&普通に楽しむ
#   - 今弱い: チェック＆1BBでオリ
# - 嘘の手が強い -> 通常戦略(オールインされた&&勝てないなら見破られたということで降参)
# - 相手にレートを上げられた
#   - 30%: 相手のストーリーは嘘。全て無視。通常戦略
#   - 70%: 相手のストーリーは真。ちゃんと勝てそうなら乗る


def printCard():
    r0 = random.choice([i for i in range(52)])
    s0 = int(r0 / 13)
    x0 = (r0 % 13) + 1
    r1 = random.choice([i for i in range(52)])
    s1 = int(r1 / 13)
    x1 = (r1 % 13) + 1
    if r0 == r1: return printCard()
    a0 = "♥♤◆♧"[s0] + f"{x0}"
    a1 = "♥♤◆♧"[s1] + f"{x1}"
    print(f"{a0} {a1}", end = " ")
    # <= 50%: フォールド
    # <= 60%: コール
    # else  : レイズ

if random.choice([True, False]):
    printCard()
    print(f"+{random.choice([0,1])}")
else:
    print("no card")
r = random.random()
print(f"Braf: {r<0.3} ({r:.2} {'><'[int(r<0.3)]} 0.3)")
